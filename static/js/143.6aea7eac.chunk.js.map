{"version":3,"file":"static/js/143.6aea7eac.chunk.js","mappings":"sOACA,EAA0B,kCAA1B,EAAoE,gCAApE,EAA2G,+BAA3G,EAAkJ,gCAAlJ,EAA0L,gCAA1L,EAAmO,iC,SCMtNA,EAAkB,WAE7B,IAAMC,GAAWC,EAAAA,EAAAA,MAsBbC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SA1BkB,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAC5BV,GACIW,EAAAA,EAAAA,IAAW,CACTN,KAAMI,EAAMJ,KACZC,MAAOG,EAAMH,MACbC,SAAUE,EAAMF,YAGrBK,SACAC,MAAK,WACFC,EAAAA,GAAAA,QAAc,kCACdJ,GACH,IACAK,OAAM,WACHD,EAAAA,GAAAA,MAAY,yDACZJ,GACH,IACFA,GACA,IAWH,OACI,+BACA,iBAAKM,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,sBACA,kBAAMD,UAAWC,EAAUT,SAAUN,EAAOgB,aAA5C,WACE,mBAAOF,UAAWC,EAAWE,QAAQ,OAArC,mBACE,kBAAOH,UAAWC,EACdG,KAAK,OACLf,KAAK,OACLgB,GAAG,OACHC,aAAa,OACbC,MAAOrB,EAAOsB,OAAOnB,KACrBoB,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAO0B,QAAQvB,MAAQH,EAAO2B,OAAOxB,KAC5CyB,UAAQ,QAGd,mBAAOd,UAAWC,EAAWE,QAAQ,QAArC,oBACE,kBAAOH,UAAWC,EACdG,KAAK,QACLE,aAAa,QACbjB,KAAK,QACLgB,GAAG,QACHE,MAAOrB,EAAOsB,OAAOlB,MACrBmB,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAO0B,QAAQtB,OAASJ,EAAO2B,OAAOvB,MAC7CwB,UAAQ,QAGd,mBAAOd,UAAWC,EAAWE,QAAQ,WAArC,sBACE,kBAAOH,UAAWC,EACdG,KAAK,WACLf,KAAK,WACLgB,GAAG,WACHE,MAAOrB,EAAOsB,OAAOjB,SACrBkB,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAO0B,QAAQrB,UAAYwB,QAAQ7B,EAAO2B,OAAOtB,UACxDuB,UAAQ,QAGZ,mBAAQV,KAAK,SAASJ,UAAWC,EAAjC,8BAMX,ECpFc,SAASe,IACpB,OACI,0BACI,SAACjC,EAAD,KAGX,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"RegistrationForm_wrapper__G9gGa\",\"title\":\"RegistrationForm_title__iQGD+\",\"form\":\"RegistrationForm_form__c8X43\",\"label\":\"RegistrationForm_label__zrkEU\",\"input\":\"RegistrationForm_input__EgGQR\",\"button\":\"RegistrationForm_button__XU1LB\",\"info\":\"RegistrationForm_info__spElP\"};","import { useDispatch } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport { signUpUser } from \"redux/auth/authOperations\";\nimport { useFormik } from \"formik\";\nimport css from './RegistrationForm.module.css';\n\n\nexport const RegistrationForm =() => {\n\n  const dispatch = useDispatch();\n\n  const handleSubmit =(items, { resetForm }) => {\n    dispatch(\n        signUpUser({\n          name: items.name,\n          email: items.email,\n          password: items.password,\n        })\n    )\n    .unwrap()\n    .then(() => {\n        toast.success('You are successfully logged in');\n        resetForm();\n    })\n    .catch(() => {\n        toast.error('Sorry, problem arised while signing, please try again');\n        resetForm();\n    });\n   resetForm();\n  }\n\nconst formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: handleSubmit,\n});\n\nreturn (\n    <> \n    <div className={css.wrapper}>\n        <p className={css.title}>Sign in</p>\n        <form className={css.form} onSubmit={formik.handleSubmit}>\n          <label className={css.label} htmlFor=\"name\"> Name\n            <input className={css.input}\n                type='text'\n                name='name'\n                id='name'\n                autoComplete='name'\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                error={formik.touched.name && formik.errors.name}\n                required\n            />\n          </label>\n          <label className={css.label} htmlFor=\"email\">E-mail\n            <input className={css.input}\n                type='email'\n                autoComplete='email'\n                name='email'\n                id='email'\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && formik.errors.email}\n                required\n            />\n          </label>\n          <label className={css.label} htmlFor=\"password\">Password\n            <input className={css.input}\n                type='password'\n                name='password'\n                id='password'\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={formik.touched.password && Boolean(formik.errors.password)}\n                required\n            />\n          </label>\n            <button type=\"submit\" className={css.button}> Sign Up </button>\n        </form>\n    </div>\n    </>\n)\n\n}","import { RegistrationForm } from \"components/RegistrationForm/RegistrationForm\";\n\nexport default function RegistrationPage() {\n    return (\n        <div>\n            <RegistrationForm />\n        </div>\n    );\n}"],"names":["RegistrationForm","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","items","resetForm","signUpUser","unwrap","then","toast","catch","className","css","handleSubmit","htmlFor","type","id","autoComplete","value","values","onChange","handleChange","error","touched","errors","required","Boolean","RegistrationPage"],"sourceRoot":""}