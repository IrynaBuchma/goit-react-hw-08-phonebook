{"version":3,"file":"static/js/268.333e6d70.chunk.js","mappings":"2NACA,EAA0B,2BAA1B,EAA6D,yBAA7D,EAA6F,wBAA7F,EAA6H,yBAA7H,EAA8J,yBAA9J,EAAgM,0BAAhM,EAAiO,wB,6BCMpNA,EAAY,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MAoBXC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,SAAU,IAEdC,SAvBiB,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAE3BT,GACIU,EAAAA,EAAAA,IAAU,CACNL,MAAOG,EAAOH,MACdC,SAAUE,EAAOF,YAGtBK,SACAC,MAAK,WACJC,EAAAA,GAAAA,QAAc,oDACdJ,GACD,IACAK,OAAM,WACLD,EAAAA,GAAAA,MAAY,iDACZJ,GACD,GACN,IASD,OACI,+BACE,iBAAKM,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,qBACA,kBAAMD,UAAWC,EAAUT,SAAUL,EAAOe,aAA5C,WACE,mBAAOF,UAAWC,EAAWE,QAAQ,QAArC,mBACE,kBAAOH,UAAWC,EACdG,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,aAAa,QACbC,MAAOtB,EAAOM,OAAOH,MACrBoB,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAO0B,QAAQvB,OAASwB,QAAQ3B,EAAO4B,OAAOzB,aAG7D,mBAAOU,UAAWC,EAAWE,QAAQ,WAArC,sBACI,kBAAOH,UAAWC,EACdG,UAAQ,EACRC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLE,MAAOtB,EAAOM,OAAOF,SACrBmB,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAO0B,QAAQtB,UAAYuB,QAAQ3B,EAAO4B,OAAOxB,gBAGhE,mBAAQgB,KAAK,SAASP,UAAWC,EAAjC,wBAEF,SAAC,KAAD,CAAMD,UAAWC,EAAUe,GAAI,YAA/B,oDAOL,ECvEc,SAASC,IACpB,OACI,0BACI,SAACjC,EAAD,KAGX,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"LoginForm_wrapper__Q4oyG\",\"title\":\"LoginForm_title__5FilZ\",\"form\":\"LoginForm_form__gPEx5\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"button\":\"LoginForm_button__LodJg\",\"info\":\"LoginForm_info__uCIL3\"};","import { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/auth/authOperations';\nimport { Link } from 'react-router-dom';\nimport css from './LoginForm.module.css'\nimport { toast } from 'react-toastify';\nimport { useFormik } from 'formik';\n\nexport const LoginForm = () => {\nconst dispatch = useDispatch();\n\nconst handleSubmit = (values, {resetForm}) => {\n    // e.preventDefault();\n    dispatch(\n        logInUser({\n            email: values.email,\n            password: values.password,\n        })\n    )\n      .unwrap()\n      .then(() => {\n        toast.success('You are successfully registered in the phonebook');\n        resetForm();\n      })\n      .catch(() => {\n        toast.error('Incorrect email or password. Please try again');\n        resetForm();\n      });\n};\nconst formik = useFormik({\n    initialValues: {\n        email: '',\n        password: '',\n    },\n    onSubmit: handleSubmit,\n});\n\nreturn (\n    <>\n      <div className={css.wrapper}>\n        <p className={css.title}>Log in</p>\n        <form className={css.form} onSubmit={formik.handleSubmit}>\n          <label className={css.label} htmlFor=\"email\">Email\n            <input className={css.input}\n                required\n                id='email'\n                name='email'\n                type=\"email\"\n                autoComplete='email'\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)} \n            />\n        </label >\n        <label className={css.label} htmlFor=\"password\">Password\n            <input className={css.input}\n                required\n                id='password'\n                name='password'\n                type='password'\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={formik.touched.password && Boolean(formik.errors.password)}\n            />\n        </label>\n        <button type=\"submit\" className={css.button}>Log In</button>\n      </form>\n      <Link className={css.info} to={'/register'}>\n            Don't have an account yet? Sign up\n      </Link>\n      </div>\n    </>\n)\n\n}","import { LoginForm } from \"components/LoginForm/LoginForm\";\n\nexport default function LoginPage() {\n    return (\n        <div>\n            <LoginForm />\n        </div>\n    )\n}"],"names":["LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","email","password","onSubmit","values","resetForm","logInUser","unwrap","then","toast","catch","className","css","handleSubmit","htmlFor","required","id","name","type","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","to","LoginPage"],"sourceRoot":""}