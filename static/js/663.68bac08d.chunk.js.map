{"version":3,"file":"static/js/663.68bac08d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/filterSelector.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// import { createSelector } from \"@reduxjs/toolkit\";\n// import { selectFilter } from \"redux/filter/filterSelector\";\n\nexport const selectContact = state => state.contacts.items;\nexport const selectLoader = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n// export const selectFilteredContact = createSelector(\n//     [selectContact, selectFilter],\n//     (contacts, filter) => {\n//         return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n//     }\n// )","export const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsList_item__6gc1x\",\"name\":\"ContactsList_name__cbzy1\",\"number\":\"ContactsList_number__9xIVj\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/filterSelector'\nimport { deleteContact } from 'redux/contacts/operations';\nimport propTypes from 'prop-types';\nimport css from './ContactsList.module.css';\n\nexport default function ContactsList() {\n    const contacts = useSelector(selectContact);\n    const filterValue = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const onDeleteBtn = (id) => dispatch(deleteContact(id));\n\n    const filteredContacts = (contacts, filterValue) => \n      filterValue\n        ? contacts.filter(contact => contact.name.toLowerCase().includes(filterValue.toLowerCase()))\n        : contacts;\n\n    const filterContacts = filteredContacts(contacts, filterValue);\n\n    return (\n        <>\n         <ul className={css.list}>\n            {filterContacts.map(({ id, name, number }) =>(\n              <li key={id} className={css.item}>\n                <p className={css.name}>{name}</p>\n                <p className={css.number}>{number}</p>\n                <button type=\"button\" onClick={() => onDeleteBtn(id)}>Delete</button>\n              </li>\n            ))}\n         </ul>\n        </>\n    )\n}\n\nContactsList.propTypes = {\n    onDeleteBtn: propTypes.func,\n    contacts: propTypes.arrayOf(\n      propTypes.exact({\n        id: propTypes.string,\n        name: propTypes.string,\n        number: propTypes.string,\n      }),\n    ),\n  };","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/filter/filterSlice\";\nimport { selectFilter } from \"redux/filter/filterSelector\";\nimport css from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Filter() {\n    const filterValue = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const handleChangeFilter = e => dispatch(setFilter(e.target.value));\n\n    return (\n      <>\n        <label className={css.label} name=\"filter\" value=\"filterValue\" htmlFor=\"filter\">\n            Find contact by name\n            <input className={css.input}\n                type=\"text\"\n                value={filterValue}\n                id=\"filter\"\n                onChange={handleChangeFilter}/>\n        </label>\n      </>\n    )\n}\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","import {useState} from 'react';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { selectContact } from 'redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { addContact } from 'redux/contacts/operations';\n\nexport default function ContactForm() {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const contacts = useSelector(selectContact);\n    const dispatch = useDispatch();\n\n\n    const onAddContact = (name, number) => dispatch(addContact({name, number}));\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const isAdded = name => \n        contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase());\n        \n        if(isAdded(name)) {\n            return alert(`${name} is already in contacts`);\n        } else {\n            onAddContact(name, number);\n        }\n\n        setName(''); \n        setNumber('');\n    }\n\n        return (\n          <>\n            <form className={css.form} onSubmit={e => handleSubmit(e)} autoComplete=\"off\">\n                <label className={css.label} id=\"name\" htmlFor=\"name\">Name\n                  <input className={css.input}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    id=\"name\"\n                    onChange={e => setName(e.target.value)}\n                    // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    // required\n                  />\n                </label>\n                <label className={css.label} id=\"number\" htmlFor=\"number\">Phone\n                    <input className={css.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        id=\"number\"\n                        onChange={e => setNumber(e.target.value)}\n                        // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        // title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        // required\n                    />\n                </label>\n              <button type=\"submit\" disabled={!(name && number)}>Add contact</button>\n            </form>\n          </>\n        );\n      }\n\nContactForm.propTyps = {\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onAddContact: PropTypes.func.isRequired, \n}","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ContactsPage_section__WlQMx\"};","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoader, selectContact, selectError } from 'redux/contacts/selectors';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Filter from '../../components/Filter/Filter';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport css from './ContactsPage.module.css';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectLoader);\n    const contacts = useSelector(selectContact);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n      <>\n        <div className={css.section}>\n            <h1>Phonebook</h1>\n            <ContactForm/>\n            {isLoading && !error && <b>Request in progress...</b>}\n        </div>\n        {contacts.length ? (\n        <div className={css.section}>\n            <h2>Contacts</h2>\n            <Filter/>\n            <ContactsList/>\n        </div>\n        ) : null}\n      </>\n    )\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["selectContact","state","contacts","items","selectLoader","isLoading","selectError","error","selectFilter","filter","ContactsList","useSelector","filterValue","dispatch","useDispatch","filterContacts","contact","name","toLowerCase","includes","filteredContacts","className","css","map","id","number","type","onClick","deleteContact","onDeleteBtn","Filter","value","htmlFor","onChange","e","setFilter","target","ContactForm","useState","setName","setNumber","handleSubmit","preventDefault","some","isAdded","alert","addContact","onAddContact","onSubmit","autoComplete","disabled","propTyps","PropTypes","isRequired","Contacts","useEffect","fetchContacts","length","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}